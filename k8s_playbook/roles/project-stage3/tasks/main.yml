- name: Check if IAM OIDC provider is associated
  become: yes
  become_user: ubuntu
  command: eksctl utils associate-iam-oidc-provider --region={{ aws_region }} --cluster=Arnab-cluster --approve
  register: oidc_association
  ignore_errors: yes

- name: Associate IAM OIDC provider if not already associated
  become: yes
  become_user: ubuntu
  command: eksctl utils associate-iam-oidc-provider --region={{ aws_region }} --cluster=Arnab-cluster --approve
  when: oidc_association.rc != 0

- name: Check if EBS CSI Controller service account exists
  become: yes
  become_user: ubuntu
  command: eksctl get iamserviceaccount --cluster Arnab-cluster --name ebs-csi-controller-sa --namespace kube-system
  register: ebs_csi_sa_check
  ignore_errors: yes

- name: Create EBS CSI Controller service account if not exists
  become: yes
  become_user: ubuntu
  command: eksctl create iamserviceaccount --name ebs-csi-controller-sa --namespace kube-system --cluster Arnab-cluster --role-name AmazonEKS_EBS_CSI_DriverRole --role-only --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy --approve
  when: ebs_csi_sa_check.rc != 0

- name: Check if AWS EBS CSI Driver addon exists
  become: yes
  become_user: ubuntu
  command: eksctl get addon --name aws-ebs-csi-driver --cluster Arnab-cluster
  register: ebs_csi_addon_check
  ignore_errors: yes

- name: Create AWS EBS CSI Driver addon if not exists
  become: yes
  become_user: ubuntu
  command: eksctl create addon --name aws-ebs-csi-driver --cluster Arnab-cluster --service-account-role-arn arn:aws:iam::905418049611:role/AmazonEKS_EBS_CSI_DriverRole --force
  when: ebs_csi_addon_check.rc != 0
